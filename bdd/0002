J'essaie de comprendre ce qui se passe dans mon projet avec un script SQL et un contrôleur de modèle de vue Code method, car la base de données SQL n'accepte pas les commandes d'insertion
Pour éviter de futurs problèmes, modifiez tous les liens pour qu'ils soient liés à l'index $page = isset($_GET['page']) ? $_GET['page'] : 'accueil';

CREATE TABLE UTILISATEURS (
    id_utilisateur INT PRIMARY KEY AUTO_INCREMENT,
    type VARCHAR(50) NOT NULL DEFAULT 'utilisateur',
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    telephone VARCHAR(20)
);


 /bdd/connexion.php<?php try{$user = "root";$pass = "";$connexion = new PDO('mysql:host=localhost;dbname=hotel_claude', $user, $pass); }catch(PDOException $e){print "Erreur! Échec de la connexion:" . $e->getMessage() ."<br/>";die();}?>
/controleur/utilisateurController.php
 <?php
session_start();
include('../model/utilisateurModel.php');
include('../bdd/connexion.php');

if (isset($_POST['action'])) {
    $utilisateurController = new UtilisateurController($connexion);

    switch ($_POST['action']) {
        case 'ajouter':
            $utilisateurController->create();
            break;
        case 'supprimer':
            $utilisateurController->delete();
            break;
        case 'connexion':
            $utilisateurController->connexion();
            break;
        case 'inscription':
            $utilisateurController->inscription();
            break;
        default:
            exit; // Action non reconnue
    }
}

class UtilisateurController
{
    private $utilisateur;

    public function __construct($connexion)
    {
        $this->utilisateur = new Utilisateur($connexion);
    }

    public function inscritpion()
    {
        // Vérification des champs obligatoires
        if (empty($_POST['nom']) || empty($_POST['prenom']) || empty($_POST['email']) || empty($_POST['password'])) {
            header('Location: ../vue/utilisateur/inscription.php?error=missing_fields');
            exit;
        }

        // Ajout de l'utilisateur
        $result = $this->utilisateur->ajouterUtilisateur(
            $_POST['nom'],
            $_POST['prenom'],
            $_POST['email'],
            $_POST['password'],
            $_POST['telephone']
        );

        //var_dump($result);
        //die();

        if ($result) {
            header('Location: ../vue/utilisateur/inscription.php?success=1');
            exit;
        } else {
            header('Location: ../vue/utilisateur/inscription.php?error=email_taken');
            exit;
        }
    }

    public function connexion()
    {
        // Vérification des champs obligatoires
        if (empty($_POST['email']) || empty($_POST['password'])) {
            header('Location: ../vue/utilisateur/login.php?error=missing_fields');
            exit;
        }

        // Vérification des informations d'identification
        $user = $this->utilisateur->connexionUtilisateur($_POST['email'], $_POST['password']);
/** var_dump($user);
    *die();
    *var_dump($_POST['password']);
    *var_dump($user['password']);
    *var_dump($_POST['password'] == $user['password']);
    *die;*/

        if ($user) {
            // Stockage des informations dans la session
            $_SESSION['user'] = [
                'id_utilisateur' => $user['id_utilisateur'],
                'nom' => $user['nom'],
                'email' => $user['email'],
                'type' => $user['type'] ?? 'utilisateur' // Type par défaut si absent
            ];
            header('Location: ../index.php'); // Redirection après connexion réussie
        } else {
            header('Location: ../vue/utilisateur/login.php?error=invalid_credentials');
            exit;
        }
    }
    
}
?>

/model/utilisateurModel.php
 <?php

class Utilisateur
{
    private $bdd;

    public function __construct($bdd)
    {
        $this->bdd = $bdd;
    }

    public function ajouterUtilisateur($nom, $prenom, $email, $password, $telephone)
	{
        try{
		$req = $this->bdd->prepare("INSERT INTO utilisateurs (nom, prenom, email, password, telephone) VALUES (:nom, :prenom, :email, :password, :telephone)");

		$req->bindParam(':nom',     $nom);
		$req->bindParam(':prenom',  $prenom);
		$req->bindParam(':email',   $email);
        $req->bindParam(':password',$password);
        $req->bindParam(':telephone',$telephone);
		return $req->execute();
        }catch (PDOException $e) {
            // Gestion d'erreur : Affichage dans les logs
            error_log("Erreur lors de l'ajout d'un utilisateur : " . $e->getMessage());
            return false;
        }

	}

	public function allUtilisateur()
	{
        try {
		$req = $this->bdd->prepare("SELECT * FROM utilisateurs");
		$req->execute();
		return $req->fetchAll();
        }catch (PDOException $e) {
            error_log("Erreur lors de la récupération des utilisateurs : " . $e->getMessage());
            return [];
        }
	}
    //Supprimer un utilisateur par son identifiant.
	public function supprimerUtilisateur($id)
	{
        try {
		$req = $this->bdd->prepare("DELETE FROM utilisateurs WHERE id_utilisateur = ?");
		return $req->execute([$id]);
        } catch (PDOException $e) {
            error_log("Erreur lors de la suppression de l'utilisateur : " . $e->getMessage());
            return false;
	    }
    }
    public function updateUtilisateur($nom, $prenom, $email, $telephone, $password, $id)
    {
        try{
        $stmt = $this->bdd->prepare("UPDATE utilisateurs SET nom = :nom, prenom = :prenom, email = :email, telephone = :telephone, password = :password WHERE id_utilisateur = :id");

        $stmt->bindParam(':nom', $nom);
        $stmt->bindParam(':prenom', $prenom);
        $stmt->bindParam(':email', $email);
        $stmt->bindParam(':telephone', $telephone);
        $stmt->bindParam(':password', $password);
        $stmt->bindParam(':id', $id);
       return $stmt->execute([$id]);// Retourne vrai si la mise à jour a réussi
        } catch (PDOException $e) {
        error_log("Erreur lors de la update de l'utilisateur : " . $e->getMessage());
        return false;
        }
    
    }

    public function getUtilisateurById($id) 
    {
        $stmt = $this->bdd->prepare('SELECT * FROM utilisateurs WHERE id_utilisateur = ?');
        $stmt->execute([$id]);
        return $stmt->fetch();
    }

	public function selectUtilisateur() 
    {
        try{
        $stmt = $this->bdd->prepare('SELECT COUNT(*) AS nombre_de_utilisateurs FROM utilisateurs');
        $stmt->execute();
        return $stmt->fetch();
        } catch (PDOException $e) {
            error_log("Erreur lors de la get l'utilisateur : " . $e->getMessage());
            return false;
        }
    }       

    public function selectUtilisateur2_Cloude()
    {
        try {
            $stmt = $this->bdd->prepare("SELECT COUNT(*) AS nombre_de_utilisateur FROM utilisateurs");
            $stmt->execute();
            return $stmt->fetchColumn();
        } catch (PDOException $e) {
            error_log("Erreur lors du comptage des utilisateurs : " . $e->getMessage());
            return 0;
        }
    }

    public function connexionUtilisateur($email, $password)
    {

        $stmt = $this->bdd->prepare("SELECT * FROM utilisateurs WHERE email = :email");
        $stmt->execute(['email' => $email]);
        $user = $stmt->fetch();

        if ($user && $password === $user['password']) {
            return $user; 
        }
        return false; 
       // var_dump($stmt->fetch());
       // die;
        }
        


}
?>

/vue/commun/header.php
<?php
session_start();
?>
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Hotel</title>
    <!-- Ajout de Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="icon" href="images/favicon.ico">
</head>
<body>

    <!-- Barre de navigation principale -->
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <div class="container-fluid">
                <a class="navbar-brand" href="index.php?page=accueil">Accueil Hotel</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav">                        
                        <li class="nav-item">
                            <a class="nav-link" href="index.php?page=inscription">Inscription</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="index.php?page=login">Connexion</a>
                        </li>
                        
                        <!-- Afficher uniquement si l'utilisateur est connecté -->
                        <?php if (isset($_SESSION['utilisateur'])): ?>
                            <li class="nav-item">
                                <a class="nav-link" href="index.php?page=chambres">Chambres</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="index.php?page=contact">Contact</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="logout.php">Déconnexion</a>
                            </li>
                        <?php endif; ?>
                    </ul></div></div></nav></header>
/vue/commun/footer.php
     <!-- Pied de page -->
     <footer class="bg-light py-4 mt-5">
        <div class="container">
            <div class="row">
                <div class="col text-center">
                    <p>&copy; 2024 Hotel Management. Tous droits réservés.</p>
                    <p>Site développé par votre équipe.</p>
                </div>
                <div class="col text-center">
                    <ul class="list-inline">
                        <li class="list-inline-item"><a href="index.php?page=contact">"Contact"</a></li>
                        <li class="list-inline-item"><a href="index.php?page=mentions">"Mentions légales"</a></li>
                        <li class="list-inline-item"><a href="index.php?page=privacy">"Politique de confidentialité"</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </footer>

    <!-- Scripts nécessaires pour Bootstrap -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
</body>
</html>

index.php
<?php include("./vue/commun/header.php"); ?>

<?php
$page = isset($_GET['page']) ? $_GET['page'] : 'accueil';

switch ($page) {
    case 'inscription':
        include('vue/utilisateur/inscription.php');
        break;

    case 'login':
        include('vue/utilisateur/login.php');
        break;

    case 'chambres':
        include('vue/chambre/listeChambres.php');
        /**if (isset($_SESSION['utilisateur'])) {
        *include('vue/chambre/listeChambres.php');
        *} else {
        *    header('Location: index.php?page=login');
        *    exit;
        } */
        break;

    case 'contact':
        include('vue/contact.php');
        break;

    case 'reservation':
        include('vue/reservation/listeReservations.php');
        break;
        
    default:
        include('vue/accueil.php');
        break;
}
?>

<?php include("./vue/commun/footer.php"); ?>

