-- Script de création de base de données pour un système de gestion hôtelière

-- Suppression des tables si elles existent déjà (dans l'ordre inverse des contraintes)
DROP TABLE IF EXISTS COMMANDES;
DROP TABLE IF EXISTS PAIEMENTS;
DROP TABLE IF EXISTS RESERVATIONS;
DROP TABLE IF EXISTS PRODUITS;
DROP TABLE IF EXISTS CATEGORIES;
DROP TABLE IF EXISTS CHAMBRES;
DROP TABLE IF EXISTS UTILISATEURS;

-- Création de la table UTILISATEURS
CREATE TABLE UTILISATEURS (
    id_utilisateur INT PRIMARY KEY AUTO_INCREMENT,
    type VARCHAR(50) NOT NULL DEFAULT 'utilisateur',
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    telephone VARCHAR(20)
);

-- Création de la table CHAMBRES
CREATE TABLE CHAMBRES (
    id_chambre INT PRIMARY KEY AUTO_INCREMENT,
    numero VARCHAR(10) UNIQUE NOT NULL,
    type VARCHAR(50) NOT NULL,
    image 	longblob NOT NULL,
    prix DECIMAL(10, 2) NOT NULL,
    statut VARCHAR(20) NOT NULL DEFAULT 'disponible'
);

-- Création de la table RESERVATIONS
CREATE TABLE RESERVATIONS (
    id_reservation INT PRIMARY KEY AUTO_INCREMENT,
    id_utilisateur INT NOT NULL,
    id_chambre INT NOT NULL,
    date_debut DATE NOT NULL,
    date_fin DATE NOT NULL,
    prix_total DECIMAL(10, 2) NOT NULL,
    statut VARCHAR(20) NOT NULL DEFAULT 'confirmée',
    FOREIGN KEY (id_utilisateur) REFERENCES UTILISATEURS(id_utilisateur),
    FOREIGN KEY (id_chambre) REFERENCES CHAMBRES(id_chambre)
);

-- Création de la table PAIEMENTS
CREATE TABLE PAIEMENTS (
    id_paiement INT PRIMARY KEY AUTO_INCREMENT,
    id_reservation INT NOT NULL,
    montant DECIMAL(10, 2) NOT NULL,
    date_paiement DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    methode VARCHAR(50) NOT NULL,
    FOREIGN KEY (id_reservation) REFERENCES RESERVATIONS(id_reservation)
);

-- Création de la table CATEGORIES
CREATE TABLE CATEGORIES (
    id_categorie INT PRIMARY KEY AUTO_INCREMENT,
    nom VARCHAR(100) NOT NULL UNIQUE,
    description TEXT
);

-- Création de la table PRODUITS
CREATE TABLE PRODUITS (
    id_produit INT PRIMARY KEY AUTO_INCREMENT,
    id_categorie INT NOT NULL,
    nom VARCHAR(100) NOT NULL,
    prix DECIMAL(10, 2) NOT NULL,
    description TEXT,
    FOREIGN KEY (id_categorie) REFERENCES CATEGORIES(id_categorie)
);

-- Création de la table COMMANDES
CREATE TABLE COMMANDES (
    id_commande INT PRIMARY KEY AUTO_INCREMENT,
    id_reservation INT NOT NULL,
    date_commande DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    statut VARCHAR(20) NOT NULL DEFAULT 'en cours',
    montant_total DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (id_reservation) REFERENCES RESERVATIONS(id_reservation)
);

-- Création d'une table intermédiaire pour les produits dans les commandes
CREATE TABLE COMMANDES_PRODUITS (
    id_commande INT NOT NULL,
    id_produit INT NOT NULL,
    quantite INT NOT NULL DEFAULT 1,
    PRIMARY KEY (id_commande, id_produit),
    FOREIGN KEY (id_commande) REFERENCES COMMANDES(id_commande),
    FOREIGN KEY (id_produit) REFERENCES PRODUITS(id_produit)
);

-- Index pour optimiser les performances
CREATE INDEX idx_reservation_utilisateur ON RESERVATIONS(id_utilisateur);
CREATE INDEX idx_reservation_chambre ON RESERVATIONS(id_chambre);
CREATE INDEX idx_produit_categorie ON PRODUITS(id_categorie);
CREATE INDEX idx_commande_reservation ON COMMANDES(id_reservation);

-- Commentaires sur les tables
COMMENT ON TABLE UTILISATEURS IS 'Table stockant les informations des utilisateurs';
COMMENT ON TABLE CHAMBRES IS 'Table des chambres disponibles dans l''hôtel';
COMMENT ON TABLE RESERVATIONS IS 'Table des réservations de chambres';
COMMENT ON TABLE PAIEMENTS IS 'Table des transactions de paiement';
COMMENT ON TABLE CATEGORIES IS 'Table des catégories de produits';
COMMENT ON TABLE PRODUITS IS 'Table des produits disponibles';
COMMENT ON TABLE COMMANDES IS 'Table des commandes associées aux réservations';