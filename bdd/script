-- Création de la base de données
CREATE DATABASE IF NOT EXISTS hc;

-- Utilisation de la base de données créée
USE hc;

-- Table pour les rôles d'utilisateur (admin, client, etc.)
CREATE TABLE IF NOT EXISTS roles (
    id_role INT AUTO_INCREMENT PRIMARY KEY,
    role_name VARCHAR(50) NOT NULL UNIQUE
);

-- Insérer des rôles par défaut
INSERT INTO roles (role_name) VALUES ('G'),('client'), ('admin');

-- Table pour les utilisateurs
CREATE TABLE IF NOT EXISTS utilisateurs (
    id_utilisateur INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    pass VARCHAR(255) NOT NULL,
    adress TEXT(255) NOT NULL,
    role_id INT NOT NULL,
    created_at int NOT NULL,
    FOREIGN KEY (role_id) REFERENCES roles(id_role)
);


-- Table pour les chambres
CREATE TABLE IF NOT EXISTS chambres (
    id_chambre INT AUTO_INCREMENT PRIMARY KEY,
    chambres_number VARCHAR(10) NOT NULL UNIQUE,
    chambres_type VARCHAR(50) NOT NULL,  -- Par exemple : Simple, Double, Suite
    image LONGBLOB NOT NUL,
    prix DECIMAL(10, 2) NOT NULL,   -- Prix par nuit
    description TEXT,
    status ENUM('available', 'booked', 'maintenance') DEFAULT 'available'
);


-- Table pour les réservations
CREATE TABLE IF NOT EXISTS reservations (
    id_reservation INT AUTO_INCREMENT PRIMARY KEY,
    client_id INT NOT NULL,
    client_room_id INT NOT NULL,
    check_in DATE NOT NULL,
    check_out DATE NOT NULL,
    status ENUM('confirmed', 'canceled', 'completed') DEFAULT 'confirmed',
    FOREIGN KEY (client_id) REFERENCES utilisateurs(id_utilisateur),
    FOREIGN KEY (client_room_id) REFERENCES chambres(id_chambre)
);

-- Table pour les paiements
CREATE TABLE IF NOT EXISTS payments (
    id_payment INT AUTO_INCREMENT PRIMARY KEY,
   reservations_id INT NOT NULL,
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    amount DECIMAL(10, 2) NOT NULL,
    payment_method ENUM('credit_card', 'paypal', 'bank_transfer','espece') NOT NULL,
    status ENUM('paid', 'pending', 'failed') DEFAULT 'pending',
    FOREIGN KEY (reservations_id) REFERENCES reservations(id_reservation)
);

-- Table pour les commentaires des clients par la page contact
CREATE TABLE IF NOT EXISTS commentaires (
    id_commentaire INT AUTO_INCREMENT PRIMARY KEY,
    user_id_commentaire INT NOT NULL,
    room_id_commentaire INT NOT NULL,
    review_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    rating INT NOT NULL CHECK (rating >= 1 AND rating <= 5),  -- Note de 1 à 5
    comment TEXT,
    FOREIGN KEY (user_id_commentaire) REFERENCES utilisateurs(id_utilisateur),
    FOREIGN KEY (room_id_commentaire) REFERENCES chambres(id_chambre)
);
