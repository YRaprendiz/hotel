refaire tout le chemin depuis la gestion des chambres jusqu'au projet de site internet de l'hôtel dans le modèle mvc:
//connexion.php
<?php
class BaseModel {
    protected $bdd;

    public function __construct() {
        try {
            $this->bdd = new PDO('mysql:host=localhost;dbname=hc', 'root', '');
            $this->bdd->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            die('Erreur de connexion : ' . $e->getMessage());
        }
    }
}

class FlashMessage {
    public static function set($type, $message) {
        if (!isset($_SESSION)) {
            session_start();
        }
        $_SESSION['flash'] = [
            'type' => $type,
            'message' => $message
        ];
    }

    public static function display() {
        if (!isset($_SESSION)) {
            session_start();
        }
        if (isset($_SESSION['flash'])) {
            $type = $_SESSION['flash']['type'];
            $message = $_SESSION['flash']['message'];
            echo "<div class='alert alert-{$type} text-center'>{$message}</div>";
            unset($_SESSION['flash']);
        }
    }
}
?>
-- Utilisation de la base de données créée
USE hc;
-- Création de la table des rôles
CREATE TABLE IF NOT EXISTS roles (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(50) NOT NULL
);

-- Insérer des rôles par défaut
INSERT INTO roles (nom) VALUES ('client'), ('admin');

-- Création de la table des utilisateurs
CREATE TABLE IF NOT EXISTS utilisateurs (
    id_utilisateur INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role_id INT NOT NULL,
    adresse TEXT,
    FOREIGN KEY (role_id) REFERENCES roles(id) ON DELETE CASCADE,
    date_inscription TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Création de la table des chambres
CREATE TABLE IF NOT EXISTS chambres (
    id_chambre INT AUTO_INCREMENT PRIMARY KEY,
    chambres_number VARCHAR(50) NOT NULL,
    chambres_type VARCHAR(100) NOT NULL,
    prix DECIMAL(10, 2) NOT NULL,
    status ENUM('available', 'booked', 'maintenance') NOT NULL,
    description TEXT,
    image VARCHAR(255), -- Vous pouvez ajouter une image pour chaque chambre
    date_ajout TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Création de la table des messages de contact
CREATE TABLE IF NOT EXISTS contacts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    email VARCHAR(255) NOT NULL,
    message TEXT NOT NULL,
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table des réservations (facultative, si vous souhaitez gérer les réservations)
CREATE TABLE IF NOT EXISTS reservations (
    id_reservation INT AUTO_INCREMENT PRIMARY KEY,
    id_chambre INT NOT NULL,
    id_utilisateur INT NOT NULL,
    date_reservation TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    date_arrivee DATE NOT NULL,
    date_depart DATE NOT NULL,
    FOREIGN KEY (id_chambre) REFERENCES chambres(id_chambre) ON DELETE CASCADE,
    FOREIGN KEY (id_utilisateur) REFERENCES utilisateurs(id_utilisateur) ON DELETE CASCADE
//chambresModel<?php
include_once('./bdd/connexion.php');

class AdminModel extends BaseModel {
    // Gestion des utilisateurs
    public function addUser($nom, $prenom, $email, $password, $role) {
        $hashedPassword = password_hash($password, PASSWORD_BCRYPT);
        $stmt = $this->bdd->prepare("
            INSERT INTO utilisateurs (nom, prenom, email, password, role_id)
            VALUES (:nom, :prenom, :email, :password, :role_id)
        ");
        return $stmt->execute([
            'nom' => $nom,
            'prenom' => $prenom,
            'email' => $email,
            'password' => $hashedPassword,
            'role_id' => $role
        ]);
    }

    public function updateUser($id, $data) {
        $stmt = $this->bdd->prepare("
            UPDATE utilisateurs SET nom = :nom, prenom = :prenom, email = :email, role_id = :role_id
            WHERE id_utilisateur = :id
        ");
        return $stmt->execute([
            'nom' => $data['nom'],
            'prenom' => $data['prenom'],
            'email' => $data['email'],
            'role_id' => $data['role'],
            'id' => $id
        ]);
    }

    public function deleteUser($id) {
        $stmt = $this->bdd->prepare("DELETE FROM utilisateurs WHERE id_utilisateur = :id");
        return $stmt->execute(['id' => $id]);
    }

    // Gestion des chambres
    public function addRoom($room_number, $room_type, $price, $status, $description) {
        $stmt = $this->bdd->prepare("
            INSERT INTO chambres (chambres_number, chambres_type, prix, status, description)
            VALUES (:chambres_number, :chambres_type, :prix, :status, :description)
        ");
        return $stmt->execute([
            'chambres_number' => $room_number,
            'chambres_type' => $room_type,
            'prix' => $price,
            'status' => $status,
            'description' => $description
        ]);
    }

    public function updateRoom($id, $data) {
        $stmt = $this->bdd->prepare("
            UPDATE chambres SET chambres_number = :chambres_number, chambres_type = :chambres_type, 
            prix = :prix, status = :status, description = :description WHERE id_chambre = :id
        ");
        return $stmt->execute([
            'chambres_number' => $data['room_number'],
            'chambres_type' => $data['room_type'],
            'prix' => $data['price'],
            'status' => $data['status'],
            'description' => $data['description'],
            'id' => $id
        ]);
    }

    public function deleteRoom($id) {
        $stmt = $this->bdd->prepare("DELETE FROM chambres WHERE id_chambre = :id");
        return $stmt->execute(['id' => $id]);
    }
}
?>
<!-- ChambreController.php -->
<?php
include_once('./bdd/connexion.php');
include_once('./models/ChambreModel.php');

class ChambreController {
    private $model;

    public function __construct() {
        $this->model = new ChambreModel();
    }
    protected function setFlashMessage($type, $message) {
        if (!isset($_SESSION)) {
            session_start();
        }
        $_SESSION['flash'] = [
            'type' => $type,
            'message' => $message
        ];
    }

    public function list() {
        $chambres = $this->model->getAll();
        if ($chambres) {
            $this->setFlashMessage('success', 'Chambres récupérées avec succès.');
        } else {
            $this->setFlashMessage('info', 'Aucune chambre disponible.');
        }
        return $chambres;
    }

    public function details($id) {
        $chambre = $this->model->getById($id);
        if ($chambre) {
            $this->setFlashMessage('success', 'Détails de la chambre récupérés.');
        } else {
            $this->setFlashMessage('error', 'Chambre non trouvée.');
        }
        return $chambre;
    }
}
?>
//listechambre.php
<?php include('views/communs/header.php'); ?>

<div class="container my-5">
    <h1 class="mb-4">Nos Chambres Disponibles</h1>
    <div class="row">
        <?php if (!empty($chambres)): ?>
            <?php foreach ($chambres as $chambre): ?>
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <?php if (!empty($chambre['image'])): ?>
                            <img src="public/images/<?= htmlspecialchars($chambre['image']) ?>" class="card-img-top" alt="<?= htmlspecialchars($chambre['chambres_type']) ?>">
                        <?php else: ?>
                            <img src="public/images/default_room.jpg" class="card-img-top" alt="Image par défaut">
                        <?php endif; ?>
                        <div class="card-body">
                            <h5 class="card-title"><?= htmlspecialchars($chambre['chambres_type']) ?></h5>
                            <p class="card-text"><strong>Prix :</strong> <?= htmlspecialchars($chambre['prix']) ?> € / nuit</p>
                            <p class="card-text"><strong>Status :</strong> 
                                <?= $chambre['status'] === 'available' ? 'Disponible' : ($chambre['status'] === 'booked' ? 'Réservée' : 'En maintenance') ?>
                            </p>
                            <a href="index.php?page=detailsChambre&id=<?= $chambre['id_chambre'] ?>" class="btn btn-primary">Voir les détails</a>
                        </div>
                    </div>
                </div>
            <?php endforeach; ?>
        <?php else: ?>
            <p class="text-center">Aucune chambre disponible pour le moment.</p>
        <?php endif; ?>
    </div>
</div>


<?php include('views/communs/footer.php'); ?>
//listechambre.php
<?php include('views/communs/header.php'); ?>

<div class="container my-5">
    <h1 class="mb-4">Nos Chambres Disponibles</h1>
    <div class="row">
        <?php if (!empty($chambres)): ?>
            <?php foreach ($chambres as $chambre): ?>
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <?php if (!empty($chambre['image'])): ?>
                            <img src="public/images/<?= htmlspecialchars($chambre['image']) ?>" class="card-img-top" alt="<?= htmlspecialchars($chambre['chambres_type']) ?>">
                        <?php else: ?>
                            <img src="public/images/default_room.jpg" class="card-img-top" alt="Image par défaut">
                        <?php endif; ?>
                        <div class="card-body">
                            <h5 class="card-title"><?= htmlspecialchars($chambre['chambres_type']) ?></h5>
                            <p class="card-text"><strong>Prix :</strong> <?= htmlspecialchars($chambre['prix']) ?> € / nuit</p>
                            <p class="card-text"><strong>Status :</strong> 
                                <?= $chambre['status'] === 'available' ? 'Disponible' : ($chambre['status'] === 'booked' ? 'Réservée' : 'En maintenance') ?>
                            </p>
                            <a href="index.php?page=detailsChambre&id=<?= $chambre['id_chambre'] ?>" class="btn btn-primary">Voir les détails</a>
                        </div>
                    </div>
                </div>
            <?php endforeach; ?>
        <?php else: ?>
            <p class="text-center">Aucune chambre disponible pour le moment.</p>
        <?php endif; ?>
    </div>
</div>


<?php include('views/communs/footer.php'); ?>